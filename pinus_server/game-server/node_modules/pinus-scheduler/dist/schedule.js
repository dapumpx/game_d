"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The main class and interface of the schedule module
 */
const PriorityQueue = require("./priorityQueue");
const Job = require("./job");
const pinus_logger_1 = require("pinus-logger");
const path = require("path");
let logger = pinus_logger_1.getLogger('pinus-scheduler', path.basename(__filename));
let timerCount = 0;
let map = {};
let queue = PriorityQueue.createPriorityQueue(comparator);
let jobId = 0;
let timer;
// The accuracy of the scheduler, it will affect the performance when the schedule tasks are
// crowded together
let accuracy = 10;
/**
 * Schedule a new Job
 * @param trigger The trigger to use
 * @param jobFunc The function the job to run
 * @param jobData The data the job use
 * @return The job id, which can be canceled by cancelJob(id:number)
 */
function scheduleJob(trigger, jobFunc, jobData) {
    let job = Job.createJob(trigger, jobFunc, jobData);
    let excuteTime = job.excuteTime();
    let id = job.id;
    map[id] = job;
    let element = {
        id: id,
        time: excuteTime
    };
    let curJob = queue.peek();
    if (!curJob || excuteTime < curJob.time) {
        queue.offer(element);
        setTimer(job);
        return job.id;
    }
    queue.offer(element);
    return job.id;
}
exports.scheduleJob = scheduleJob;
/**
 * Cancel Job
 */
function cancelJob(id) {
    let curJob = queue.peek();
    if (curJob && id === curJob.id) {
        queue.pop();
        delete map[id];
        clearTimeout(timer);
        excuteJob();
    }
    delete map[id];
    return true;
}
exports.cancelJob = cancelJob;
/**
 * Clear last timeout and schedule the next job, it will automaticly run the job that
 * need to run now
 * @param job The job need to schedule
 * @return void
 */
function setTimer(job) {
    clearTimeout(timer);
    timer = setTimeout(excuteJob, job.excuteTime() - Date.now());
}
/**
 * The function used to ran the schedule job, and setTimeout for next running job
 */
function excuteJob() {
    let job = peekNextJob();
    let nextJob;
    while (!!job && (job.excuteTime() - Date.now()) < accuracy) {
        job.run();
        queue.pop();
        let nextTime = job.nextTime();
        if (nextTime === null) {
            delete map[job.id];
        }
        else {
            queue.offer({ id: job.id, time: nextTime });
        }
        job = peekNextJob();
    }
    // If all the job have been canceled
    if (!job)
        return;
    // Run next schedule
    setTimer(job);
}
/**
 * Return, but not remove the next valid job
 * @return Next valid job
 */
function peekNextJob() {
    if (queue.size() <= 0)
        return null;
    let job = null;
    do {
        job = map[queue.peek().id];
        if (!job)
            queue.pop();
    } while (!job && queue.size() > 0);
    return (!!job) ? job : null;
}
/**
 * Return and remove the next valid job
 * @return Next valid job
 */
function getNextJob() {
    let job = null;
    while (!job && queue.size() > 0) {
        let id = queue.pop().id;
        job = map[id];
    }
    return (!!job) ? job : null;
}
function comparator(e1, e2) {
    return e1.time > e2.time;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZWR1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9saWIvc2NoZWR1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7R0FFRztBQUNILGlEQUFpRDtBQUNqRCw2QkFBNkI7QUFJN0IsK0NBQXlDO0FBQ3pDLDZCQUE2QjtBQUM3QixJQUFJLE1BQU0sR0FBRyx3QkFBUyxDQUFDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUVyRSxJQUFJLFVBQVUsR0FBRyxDQUFDLENBQUM7QUFDbkIsSUFBSSxHQUFHLEdBQTZCLEVBQUUsQ0FBQztBQUN2QyxJQUFJLEtBQUssR0FBRyxhQUFhLENBQUMsbUJBQW1CLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFMUQsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0FBQ2QsSUFBSSxLQUFVLENBQUM7QUFFZiw0RkFBNEY7QUFDNUYsbUJBQW1CO0FBQ25CLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUVsQjs7Ozs7O0dBTUc7QUFDSCxxQkFBd0IsT0FBbUMsRUFBRSxPQUEyQixFQUFFLE9BQVc7SUFDakcsSUFBSSxHQUFHLEdBQVksR0FBRyxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzVELElBQUksVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNsQyxJQUFJLEVBQUUsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDO0lBRWhCLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDZCxJQUFJLE9BQU8sR0FBRztRQUNWLEVBQUUsRUFBRSxFQUFFO1FBQ04sSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQztJQUVGLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMxQixFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBSSxVQUFVLEdB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