"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pinus_logger_1 = require("pinus-logger");
let logger = pinus_logger_1.getLogger('pinus-rpc', 'Coder');
const OutBuffer = require("./buffer/outputBuffer");
const InBuffer = require("./buffer/inputBuffer");
function encodeClient(id, msg, servicesMap) {
    // logger.debug('[encodeClient] id %s msg %j', id, msg);
    let outBuf = new OutBuffer.OutputBuffer();
    outBuf.writeUInt(id);
    let namespace = msg['namespace'];
    let serverType = msg['serverType'];
    let service = msg['service'];
    let method = msg['method'];
    let args = msg['args'] || [];
    outBuf.writeShort(servicesMap[0][namespace]);
    outBuf.writeShort(servicesMap[1][service]);
    outBuf.writeShort(servicesMap[2][method]);
    // outBuf.writeString(namespace);
    // outBuf.writeString(service);
    // outBuf.writeString(method);
    outBuf.writeObject(args);
    return outBuf.getBuffer();
}
exports.encodeClient = encodeClient;
function encodeServer(id, args) {
    // logger.debug('[encodeServer] id %s args %j', id, args);
    let outBuf = new OutBuffer.OutputBuffer();
    outBuf.writeUInt(id);
    outBuf.writeObject(args);
    return outBuf.getBuffer();
}
exports.encodeServer = encodeServer;
function decodeServer(buf, servicesMap) {
    let inBuf = new InBuffer.InputBuffer(buf);
    let id = inBuf.readUInt();
    let namespace = servicesMap[3][inBuf.readShort()];
    let service = servicesMap[4][inBuf.readShort()];
    let method = servicesMap[5][inBuf.readShort()];
    // let namespace = inBuf.readString();
    // let service = inBuf.readString();
    // let method = inBuf.readString();
    let args = inBuf.readObject();
    // logger.debug('[decodeServer] namespace %s service %s method %s args %j', namespace, service, method, args)
    return {
        id: id,
        msg: {
            namespace: namespace,
            // serverType: serverType,
            service: service,
            method: method,
            args: args
        }
    };
}
exports.decodeServer = decodeServer;
function decodeClient(buf) {
    let inBuf = new InBuffer.InputBuffer(buf);
    let id = inBuf.readUInt();
    let resp = inBuf.readObject();
    // logger.debug('[decodeClient] id %s resp %j', id, resp);
    return {
        id: id,
        resp: resp
    };
}
exports.decodeClient = decodeClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvdXRpbC9jb2Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUF5QztBQUN6QyxJQUFJLE1BQU0sR0FBRyx3QkFBUyxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM3QyxtREFBbUQ7QUFDbkQsaURBQWlEO0FBYWpELHNCQUE2QixFQUFVLEVBQUUsR0FBUSxFQUFFLFdBQWlDO0lBQ2hGLHdEQUF3RDtJQUN4RCxJQUFJLE1BQU0sR0FBRyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMxQyxNQUFNLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JCLElBQUksU0FBUyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqQyxJQUFJLFVBQVUsR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbkMsSUFBSSxPQUFPLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzdCLElBQUksTUFBTSxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMzQixJQUFJLElBQUksR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLE1BQU0sQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFDN0MsTUFBTSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUMzQyxNQUFNLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzFDLGlDQUFpQztJQUNqQywrQkFBK0I7SUFDL0IsOEJBQThCO0lBRTlCLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFekIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQztBQUM5QixDQUFDO0FBbkJELG9DQW1CQztBQUVELHNCQUE2QixFQUFVLEVBQUUsSUFBWTtJQUNqRCwwREFBMEQ7SUFDMUQsSUFBSSxNQUFNLEdBQUcsSUFBSSxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDMUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNyQixNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pCLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUM7QUFDOUIsQ0FBQztBQU5ELG9DQU1DO0FBRUQsc0JBQTZCLEdBQVcsRUFBRSxXQUFpQztJQUN2RSxJQUFJLEtBQUssR0FBRyxJQUFJLFFBQVEsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUMsSUFBSSxFQUFFLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzFCLElBQUksU0FBUyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNsRCxJQUFJLE9BQU8sR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFDaEQsSUFBSSxNQUFNLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLHNDQUFzQztJQUN0QyxvQ0FBb0M7SUFDcEMsbUNBQW1DO0lBRW5DLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUM5Qiw2R0FBNkc7SUFFN0csTUFBTSxDQUFDO1FBQ0gsRUFBRSxFQUFFLEVBQUU7UUFDTixHQUFHLEVBQUU7WUFDRCxTQUFTLEVBQUUsU0FBUztZQUNwQiwwQkFBMEI7WUFDMUIsT0FBTyxFQUFFLE9BQU87WUFDaEIsTUFBTSxFQUFFLE1BQU07WUFDZCxJQUFJLEVBQUUsSUFBSTtTQUNiO0tBQ0osQ0FBQztBQUNOLENBQUM7QUF2QkQsb0NBdUJDO0FBRUQsc0JBQTZCLEdBQVc7SUFDcEMsSUFBSSxLQUFLLEdBQUcsSUFBSSxRQUFRLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLElBQUksRUFBRSxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMxQixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDOUIsMERBQTBEO0lBQzFELE1BQU0sQ0FBQztRQUNILEVBQUUsRUFBRSxFQUFFO1FBQ04sSUFBSSxFQUFFLElBQUk7S0FDYixDQUFDO0FBQ04sQ0FBQztBQVRELG9DQVNDIn0=